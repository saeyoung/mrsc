#############################################################
#
# Test 1. Choosing between: sys.getsizeof(X) vs. len(X)
#
#############################################################
import sys, os
sys.path.append("../..")
sys.path.append("..")
sys.path.append(os.getcwd())

import numpy as np
import pandas as pd
import copy
import pickle

from utils import *

# Choosing between: sys.getsizeof(X) vs. len(X)
def test():

    p = [1/2, 1/2]
    ratio_list_sys =[]
    ratio_list_len =[]
    for size in np.logspace(3,27,9, base=2, dtype=int):
        print("size: ", size)
        uncompressed = multinomial(size, p)
        uncompressed = list_to_string(uncompressed)
        compressed = compress(uncompressed)
        
        # sys.getsizeof()
        compression_ratio = sys.getsizeof(compressed)/sys.getsizeof(uncompressed)
        ratio_list_sys.append(compression_ratio)
        print("measured using sys.getsizeof(): ", compression_ratio)
        
        # len()
        compression_ratio = len(compressed)/len(uncompressed)
        ratio_list_len.append(compression_ratio)
        print("measured using len():           ", compression_ratio)
        print()

    ##### sys.getsizeof() plot
    plt.plot(ratio_list_sys, marker='.', label="sys.getsizeof()")

    plt.axhline(1, c="red", label="y=1")
    plt.axhline(0.5, c="salmon", label="y=0.5")
    plt.axhline(0.05, c="lightsalmon", label="y=0.05")

    plt.xticks(np.arange(9),np.linspace(3,27,9, dtype=int))
    plt.legend()
    plt.xlabel("length of string(log, base=2)")
    plt.ylabel("compression ratio")
    plt.ylim(0,)
    plt.title("Compression Ratio of Random Bernoulli generated by Numpy")
    plt.show()

    ##### len() plot
    plt.plot(ratio_list_len, marker='.', label="len()")

    plt.axhline(1, c="red", label="y=1")
    plt.axhline(0.5, c="salmon", label="y=0.5")
    plt.axhline(0.05, c="lightsalmon", label="y=0.05")

    plt.xticks(np.arange(9),np.linspace(3,27,9, dtype=int))
    plt.legend()
    plt.xlabel("length of string(log, base=2)")
    plt.ylabel("compression ratio")
    plt.ylim(0,)
    plt.title("Compression Ratio of Random Bernoulli generated by Numpy")
    plt.show()
 
def main():
    print("*******************************************************")
    print("*******************************************************")
    print("********** Running the Testing Scripts. ***************")

    test()

    print("********** Testing Scripts Done. **********************")
    print("*******************************************************")
    print("*******************************************************")

if __name__ == "__main__":

    main()
